<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"  
	xmlns:mvc="http://www.springframework.org/schema/mvc"  
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
    
	<bean id="placeholderConfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
             <list>
                 <value>classpath*:conf/jdbc.properties</value>
                 <!--<value>classpath*:conf/nginx.properties</value>-->
             </list>
         </property>
	</bean>
	
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${db.driverClass}" />
		<property name="jdbcUrl" value="${db.url}" />
		<property name="user" value="${db.username}" />
		<property name="password" value="${db.password}"/>
		<property name="minPoolSize" value="${db.minPoolSize}" />		  
		<property name="maxPoolSize" value="${db.maxPoolSize}" />
		<property name="initialPoolSize" value="${db.initialPoolSize}" />
		<property name="autoCommitOnClose" value="${db.autoCommit}" />
		<property name="idleConnectionTestPeriod" value="${db.idleConnectionTestPeriod}"/>
	</bean>

	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<bean id="mybatis.PageInterceptor" class="com.guanshj.framework.util.pagination.PagePlugin">
		<property name="dialect" value="${db.dbtype}"></property>
	</bean>
	
	<!-- myBatis配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:conf/mybatis-config.xml" />
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations">
            <list>
                <value>classpath*:mapper/**/*.xml</value>
            </list>
        </property>
        <property name="plugins" ref="mybatis.PageInterceptor"/>
	</bean>
	
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">  
        <constructor-arg ref="sqlSessionFactory" />  
    </bean>

	<!-- 事务 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- <tx:method name="get*" propagation="REQUIRED" read-only="true"/>
			<tx:method name="query*" propagation="REQUIRED" read-only="true"/>
			<tx:method name="find*" propagation="REQUIRED" read-only="true"/>
			<tx:method name="load*" propagation="REQUIRED" read-only="true"/>
			<tx:method name="list*" propagation="REQUIRED" read-only="true"/>
			<tx:method name="search*" propagation="REQUIRED" read-only="true"/> -->
			<!-- 如果设置read-only="true"，在记录操作日志的时候会报异常 -->
			<tx:method name="*" propagation="REQUIRED" read-only="false"/>
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<!-- <aop:advisor pointcut="execution(* net.hunanst.eos.service..*.*(..))" advice-ref="txAdvice" /> -->
		
		<aop:pointcut id="myPointcut" expression="execution(* com.guanshj.services..*.*(..))" />
		
		<!-- 事务控制 -->
		<aop:advisor id="myAdvisor" pointcut-ref="myPointcut" advice-ref="txAdvice" order="1"/>
		
		<!--&lt;!&ndash; 日志的记录 &ndash;&gt;-->
		<!--<aop:aspect id="myAspect" ref="operlogServiceImpl" order="2">-->
            <!--&lt;!&ndash; <aop:before method="before" pointcut-ref="myPointcut" /> &ndash;&gt;-->
            <!--<aop:after-returning method="afterReturning" returning="returnObj" pointcut-ref="myPointcut" />-->
            <!--<aop:after-throwing method="afterThrowing" throwing="throwable" pointcut-ref="myPointcut" />-->
        <!--</aop:aspect>-->
        
	</aop:config>
	
</beans>